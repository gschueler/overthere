// build.gradle for overthere repository containing the overthere and itest-support projects

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		mavenRepo urls: 'http://evgeny-goldin.org/artifactory/repo/'
	}
	dependencies {
		classpath 'de.huxhorn.gradle:de.huxhorn.gradle.pgp-plugin:0.0.3'
	}
}

defaultTasks 'build'

allprojects {
	version = '1.0.12-SNAPSHOT'
	group = 'com.xebialabs.overthere'

	apply plugin: 'idea'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'maven'
	apply plugin: de.huxhorn.gradle.pgp.PgpPlugin

	repositories {
		mavenLocal()
		mavenCentral()
		mavenRepo urls: 'http://download.java.net/maven/2/'
	}

	sourceCompatibility = 1.6
	targetCompatibility = 1.6

	configurations {
	    compile {
		transitive = false
	    }
	}

	task sourcesJar(type: Jar) {
		from sourceSets.main.allSource
		classifier = 'sources'
	}

	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = "javadoc"
		from javadoc.destinationDir
	}

	artifacts {
		archives sourcesJar, javadocJar
	}

	test {
		excludes = ["**/*Itest.*"]
	}

	task itest(type: Test) {
		includes = ['**/*Itest.*']
		testResultsDir = file("${buildDir}/itest-results")

		copyProjectPropertyToSystemProperty(project, systemProperties, 'itests')
		copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.endpoint')
		copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.accessKey')
		copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.secretKey')
	}

	pgp {
		secretKeyRingFile = new File("${System.properties['user.home']}/.gnupg/secring.gpg")
	}

	uploadArchives {
		if(project.hasProperty('sonatypeUsername')) {
			repositories.mavenDeployer {
				configuration = configurations.archives

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}
				snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}

				pom.project {
					name "Overthere"
					description "Remote file manipulation and process execution framework for Java"
					packaging "jar"
					url "https://github.com/xebialabs/overthere"
					inceptionYear "2011"

					scm {
						url "https://github.com/xebialabs/overthere"
					}

					licenses {
						license {
							name "The Apache Software License, Version 2.0"
							url "http://www.apache.org/licenses/LICENSE-2.0.txt"
							distribution "repo"
						}
					}

					developers {
						developer {
							id "vpartington"
							name "Vincent Partington"
							url "http://www.xebialabs.com/"
							email "vpartington@xebialabs.com"
							roles {
								role "Developer"
							}
						}
						developer {
							id "hierynomus"
							name "Jeroen van Erp"
							url "http://www.xebialabs.com/"
							email "jvanerp@xebialabs.com"
							roles {
								role "Developer"
							}
						}
					}
				}
			}
		}
	}
}

def copyProjectPropertyToSystemProperty(project, systemProperties, name) {
	if(project.hasProperty(name)) {
		systemProperties[name] = project.getProperty(name)
	}
}
