// build.gradle for overthere repository containing the overthere and itest-support projects

defaultTasks 'build'

allprojects {
	version = '2.0.0-SNAPSHOT'
	group = 'com.xebialabs.overthere'

	apply plugin: 'idea'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'maven'
	apply plugin: 'signing'

	repositories {
		mavenCentral()
		maven {
			url 'http://download.java.net/maven/2/'
		}
		maven {
			url 'https://oss.sonatype.org/content/repositories/releases'
		}
	}

	sourceCompatibility = 1.6
	targetCompatibility = 1.6

	configurations {
		compile {
			transitive = false
		}
	}

	dependencies {
		testCompile 'nl.javadude.assumeng:assumeng:1.1.0'
		testCompile 'org.testng:testng:5.14.10'
		testRuntime('org.uncommons:reportng:1.1.2') {
			exclude group: 'org.testng', module: 'testng'
		}
	}

	test {
		useTestNG()
		options {
			listeners << 'org.uncommons.reportng.JUnitXMLReporter'
		}
		excludes = ['**/*Itest.*']
	}

	task itest(type: Test) {
    	useTestNG {
    		suites "testng.xml"
    	}
		options {
			listeners << 'org.uncommons.reportng.JUnitXMLReporter'
		}

		includes = ['**/*Itest.*']
		testResultsDir = file("${buildDir}/itest-results")
		testReportDir = file("${buildDir}/reports/itests")

		copyProjectPropertyToSystemProperty(project, systemProperties, 'itests')
		copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.endpoint')
		copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.accessKey')
		copyProjectPropertyToSystemProperty(project, systemProperties, 'aws.secretKey')
	}

	task sourcesJar(type: Jar) {
		from sourceSets.main.allSource
		classifier = 'sources'
	}

	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
	}

	artifacts {
		archives sourcesJar, javadocJar
	}

	signing {
		required { gradle.taskGraph.hasTask('uploadArchives') }
		sign configurations.archives
	}

	uploadArchives {
		if(project.hasProperty('sonatypeUsername')) {
			repositories.mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

				configuration = configurations.archives

				repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}
				snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}

				pom.project {
					name 'Overthere'
					description 'Remote file manipulation and process execution framework for Java'
					packaging 'jar'
					url 'https://github.com/xebialabs/overthere'
					inceptionYear '2011'

					scm {
						url 'https://github.com/xebialabs/overthere'
					}

					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}

					developers {
						developer {
							id 'vpartington'
							name 'Vincent Partington'
							url 'http://www.xebialabs.com/'
							email 'vpartington@xebialabs.com'
							roles {
								role 'Developer'
							}
						}
						developer {
							id 'hierynomus'
							name 'Jeroen van Erp'
							url 'http://www.xebialabs.com/'
							email 'jvanerp@xebialabs.com'
							roles {
								role 'Developer'
							}
						}
					}
				}
			}
		}
	}
}

def copyProjectPropertyToSystemProperty(project, systemProperties, name) {
	if(project.hasProperty(name)) {
		systemProperties[name] = project.getProperty(name)
	}
}
